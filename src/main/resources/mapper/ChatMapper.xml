<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "com.with.withlocalhost.chat.model.repository.ChatRepository">

	 <!-- ChatMessageDto를 위한 resultMap -->
    <resultMap id="chatMessageResultMap" type="com.with.withlocalhost.chat.model.ChatMessageDto">
        <id property="msgId" column="msg_id"/>
        <result property="sendId" column="send_id"/>
        <result property="chatRoomId" column="chat_room_id"/>
        <result property="msgContent" column="msg_content"/>
        <result property="msgSendDate" column="msg_send_date"/>
        <result property="msgSendTime" column="msg_send_time"/>
        <result property="msgStatus" column="msg_status"/>
        <result property="receiver" column="receiver"/>
    </resultMap>

    <!-- ChatRoomDto를 위한 resultMap -->
	<resultMap id="chatRoomResultMap" type="com.with.withlocalhost.chat.model.ChatRoomDto">
	    <id property="chatRoomId" column="chat_room_id"/>
	    <result property="chatGuidId" column="chat_guid_id"/>
	    <result property="chatGuestId" column="chat_guest_id"/>
	    <result property="chatGuidNickName" column="chat_guid_nickname"/>
	    <result property="chatGuestNickName" column="chat_guest_nickname"/>
	    <result property="lastMessage" column="last_message"/>
	    <result property="userImg" column="user_img"/>
	</resultMap>




	<!-- chat data 넣기-->
	<insert id="insertChatMessage" parameterType="com.with.withlocalhost.chat.model.ChatMessageDto">
		INSERT INTO chat_message
            (send_id, chat_room_id, msg_content, msg_send_date,msg_send_time)
        VALUES
            (#{sendId}, #{chatRoomId}, #{msgContent}, #{msgSendDate}, #{msgSendTime});
	</insert>


 	<!-- 채팅방 목록 조회 -->
    <select id="getChatRoomList" parameterType="String" resultMap="chatRoomResultMap">
		SELECT DISTINCT 
		    c.chat_room_id,
		    c.chat_guid_nickname,
		    c.chat_guid_id,
		    c.chat_guest_id,
		    c.chat_guest_nickname,
		    m.msg_id,
		    m.msg_content AS last_message,
		    CASE 
		        WHEN c.chat_guid_id = #{userId} THEN u2.user_img  
		        WHEN c.chat_guest_id = #{userId} THEN u1.user_img 
		        ELSE NULL
		    END AS user_img  
		FROM
		    chat_room AS c
		LEFT JOIN
		    user AS u1
		    ON c.chat_guid_id = u1.user_id  
		LEFT JOIN
		    user AS u2
		    ON c.chat_guest_id = u2.user_id  
		LEFT JOIN
		    (SELECT chat_room_id, msg_id, msg_content
		     FROM chat_message
		     WHERE msg_id IN (
		         SELECT MAX(msg_id)
		         FROM chat_message
		         GROUP BY chat_room_id
		     )) AS m
		    ON c.chat_room_id = m.chat_room_id
		WHERE
		    (c.chat_guid_id = #{userId} OR c.chat_guest_id = #{userId});
					
	</select>

    <!-- 채팅 내역 조회 -->
    <select id="getChatList" parameterType="int" resultMap="chatMessageResultMap">
		select
			msg_id
			,send_id
		    ,chat_room_id
		    ,msg_content
		    ,DATE_FORMAT(msg_send_date, '%Y-%m-%d') as msg_send_date
		    ,DATE_FORMAT(msg_send_time, '%H:%i') as msg_send_time
		    ,msg_status
		from chat_message
		where
			chat_room_id = #{chatRoomId};
    </select>

    <!-- 채팅방 삭제 -->
    <delete id="deleteChatRoom" parameterType="int">
        DELETE FROM chat_rooms WHERE room_id = #{chatRoomId}
    </delete>
    
	  <!-- 사용자 ID로 FCM 토큰 조회 -->
    <select id="getToken" parameterType="string" resultType="string">
        SELECT fcm_token
        FROM user_fcm_token
        WHERE user_id = #{userId}
    </select>
    
    <insert id="createChatRoom" parameterType="com.with.withlocalhost.chat.model.ChatRoomDto">
	    INSERT INTO chat_room (
	        chat_guid_id,
	        chat_guid_nickname,
	        chat_guest_id,
	        chat_guest_nickname
	    )
	    VALUES (
	        #{chatGuidId},
	        #{chatGuidNickName},
	        #{chatGuestId},
	        #{chatGuestNickName}
	    )
	</insert>
    
    
    
	 <select id="checkChatRoom" parameterType="com.with.withlocalhost.chat.model.ChatRoomDto" resultType="int">
	    SELECT COUNT(*)
	    FROM chat_room
	    WHERE (chat_guid_id = #{chatGuidId} AND chat_guest_id = #{chatGuestId})
	       OR (chat_guest_id = #{chatGuestId} AND chat_guid_id = #{chatGuidId})
	</select>


</mapper>